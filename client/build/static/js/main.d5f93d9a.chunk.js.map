{"version":3,"sources":["components/TableData.js","utils/API.js","components/Input.js","App.js","index.js"],"names":["greenHighlight","backgroundColor","redHighlight","TableData","_ref","students","gradeMap","A","B","C","D","F","createRow","_id","name","math","history","science","english","grades","averageGpa","reduce","total","grade","slice","getGpa","rows","data","map","student","highest","previous","lowest","prev","console","log","react_default","a","createElement","style","margin","Table_default","responsive","size","textAlign","row","key","parseFloat","API","studentData","axios","post","Input","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_useState3","mathGpa","historyGpa","scienceGpa","englishGpa","_useState4","state","setState","id","length","gradesCheck","letters","handleGrade","e","objectSpread","defineProperty","target","value","toUpperCase","match","Card_default","Body","Form_default","onSubmit","preventDefault","push","concat","newStudent","newData","JSON","stringify","catch","err","Label","fontWeight","Row","Col_default","Control","type","onChange","charAt","placeholder","required","maxLength","Button_default","variant","Row_default","xs","Toast_default","onClose","delay","autohide","components_TableData","App","components_Input","ReactDOM","render","src_App","document","getElementById"],"mappings":"0rCAIMA,EAAiB,CACrBC,gBAAiB,YAEbC,EAAe,CACnBD,gBAAiB,WAqGJE,EAlGG,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACbC,EAAW,CACfC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAYCC,EAAY,SAACC,EAAKC,EAAMC,EAAMC,EAASC,EAASC,EAASC,GAG7D,MAAO,CAAEN,MAAKC,OAAMC,OAAMC,UAASC,UAASC,UAASE,WAZxC,SAAAD,GACb,OAAOA,EACHE,OAAO,SAACC,EAAOC,GAGf,OAAOD,GAFNC,EAAQjB,EAASiB,EAAMC,OAAO,KAEP,GACtB,GAIaC,CAAON,KAKtBO,EACJrB,EAASsB,KAAKC,IAAI,SAAAC,GAAO,OACvBjB,EACEiB,EAAQhB,IACRgB,EAAQf,KACRe,EAAQV,OAAO,GAAGK,OAAO,GACzBK,EAAQV,OAAO,GAAGK,OAAO,GACzBK,EAAQV,OAAO,GAAGK,OAAO,GACzBK,EAAQV,OAAO,GAAGK,OAAO,GACzBK,EAAQV,UAMRW,EAAUJ,EAAKL,OAAO,SAACU,EAAUF,GACrC,OAAQE,GAAY,GAAKF,EAAQT,WAC7BW,EACAF,EAAQT,YACX,GAEGY,EAASN,EAAKL,OAAO,SAACY,EAAMJ,GAChC,OAAQI,GAAQ,GAAKJ,EAAQT,WACzBa,EACAJ,EAAQT,YACX,GAKH,OAHAc,QAAQC,IAAIH,GACZE,QAAQC,IAAIL,GAGVM,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,SACnBd,GACCU,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAOK,YAAU,EAACC,KAAK,MACrBP,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEK,UAAW,WACtBR,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBAGJF,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAAEK,UAAW,WACxBlB,EAAKE,IAAI,SAAAiB,GAAG,OACXT,EAAAC,EAAAC,cAAA,MACEQ,IAAKD,EAAIhC,IACT0B,MACEQ,WAAWF,EAAIzB,cAAgBU,EAC3B9B,EACA+C,WAAWF,EAAIzB,cAAgBY,EAAS9B,EAAe,MAG7DkC,EAAAC,EAAAC,cAAA,UAAKO,EAAIhC,KACTuB,EAAAC,EAAAC,cAAA,UAAKO,EAAI/B,MACTsB,EAAAC,EAAAC,cAAA,UAAKO,EAAI9B,MACTqB,EAAAC,EAAAC,cAAA,UAAKO,EAAI7B,SACToB,EAAAC,EAAAC,cAAA,UAAKO,EAAI5B,SACTmB,EAAAC,EAAAC,cAAA,UAAKO,EAAI3B,SACTkB,EAAAC,EAAAC,cAAA,UAAKO,EAAIzB,oCC9FV4B,EAWA,SAASC,GACpB,OAAOC,IAAMC,KAAK,gBAAiBF,YC6KxBG,EAhLD,WACZ,IAAM/C,EAAW,CAAEsB,UADD0B,EAEMC,oBAAS,GAFfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEXK,EAFWH,EAAA,GAELI,EAFKJ,EAAA,GAAAK,EAGQN,mBAAS,CACjCxC,KAAM,GACNK,OAAQ,GACR0C,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,WAAY,KATIC,EAAAT,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGXM,EAHWD,EAAA,GAGJE,EAHIF,EAAA,GAWVnD,EAA8DoD,EAA9DpD,KAAMK,EAAwD+C,EAAxD/C,OAAQ0C,EAAgDK,EAAhDL,QAASC,EAAuCI,EAAvCJ,WAAYC,EAA2BG,EAA3BH,WAAYC,EAAeE,EAAfF,WAEnDI,EAAKzC,IAAKA,IAAK0C,OAAS,GAAGxD,IAEzByD,EAAc,cACdC,EAAU,cA4CVC,EAAc,SAAAC,GAClBN,EAASX,OAAAkB,EAAA,EAAAlB,CAAA,GAAKU,EAANV,OAAAmB,EAAA,EAAAnB,CAAA,GAAciB,EAAEG,OAAO9D,KAAO2D,EAAEG,OAAOC,MAAMC,iBAEhDL,EAAEG,OAAOC,MAAME,MAAMT,KACxBH,EAASX,OAAAkB,EAAA,EAAAlB,CAAA,GAAKU,EAANV,OAAAmB,EAAA,EAAAnB,CAAA,GAAciB,EAAEG,OAAO9D,KAAO,MACtC2D,EAAEG,OAAOC,MAAQ,GACjBlB,GAAQ,KAIZ,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,SACnB,IACDJ,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,KACED,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAK4C,KAAN,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAM8C,SAzDO,SAAAV,GACnBA,EAAEW,iBACFlD,QAAQC,IAAI,kBACZhB,EAAOkE,KAAP,UAAAC,OACYzB,GADZ,aAAAyB,OAEexB,GAFf,aAAAwB,OAGevB,GAHf,aAAAuB,OAIetB,IAIf,IAAIuB,EAAa,CAAE1E,MADnBuD,EAC4BtD,KAAMA,EAAMK,OAAQA,GAChDd,EAASsB,KAAK0D,KAAKE,GAEnB,IAAIC,EAAUnF,EACVsB,EAAO8D,KAAKC,UAAUF,GAE1BxC,EAAgB,CAAErB,SAAQgE,MAAM,SAAAC,GAAG,OAAI1D,QAAQC,IAAIyD,KAEnDzB,EAASX,OAAAkB,EAAA,EAAAlB,CAAA,GACJU,EADG,CAENpD,KAAM,GACNK,OAAQ,GACR0C,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,WAAY,QAgCN5B,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,CAAYtD,MAAO,CAAEuD,WAAY,SAC9B,IADH,oCAIA1D,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK0D,IAAN,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,aACAzD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK4D,QAAN,CACEC,KAAK,OACLpF,KAAK,OACL+D,MAAO/D,GAAQ,GACfqF,SAxCG,SAAA1B,GACjBN,EAASX,OAAAkB,EAAA,EAAAlB,CAAA,GACJU,EADGV,OAAAmB,EAAA,EAAAnB,CAAA,GAELiB,EAAEG,OAAO9D,KACR2D,EAAEG,OAAOC,MAAMuB,OAAO,GAAGtB,cAAgBL,EAAEG,OAAOC,MAAMrD,MAAM,MAG7DiD,EAAEG,OAAOC,MAAME,MAAMR,KACxBJ,EAASX,OAAAkB,EAAA,EAAAlB,CAAA,GAAKU,EAANV,OAAAmB,EAAA,EAAAnB,CAAA,GAAciB,EAAEG,OAAO9D,KAAO,MACtC2D,EAAEG,OAAOC,MAAQ,KAgCLlC,KAAK,KACL0D,YAAY,OACZC,UAAQ,KAIZlE,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACG,IACDD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,aACAzD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK4D,QAAN,CACEC,KAAK,OACLK,UAAU,IACVzF,KAAK,UACL+D,MAAOhB,GAAW,GAClBsC,SAAU3B,EACV7B,KAAK,KACL0D,YAAY,OACZC,UAAQ,KAGZlE,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACG,IACDD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,gBACAzD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK4D,QAAN,CACEC,KAAK,OACLK,UAAU,IACVzF,KAAK,aACL+D,MAAOf,GAAc,GACrBqC,SAAU3B,EACV7B,KAAK,KACL0D,YAAY,UACZC,UAAQ,KAGZlE,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACG,IACDD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,gBACAzD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK4D,QAAN,CACEC,KAAK,OACLK,UAAU,IACVzF,KAAK,aACL+D,MAAOd,GAAc,GACrBoC,SAAU3B,EACV7B,KAAK,KACL0D,YAAY,UACZC,UAAQ,KAGZlE,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,KACG,IACDD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAKwD,MAAN,gBACAzD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAK4D,QAAN,CACEC,KAAK,OACLK,UAAU,IACVzF,KAAK,aACL+D,MAAOb,GAAc,GACrBmC,SAAU3B,EACV7B,KAAK,KACL0D,YAAY,UACZC,UAAQ,MAKdlE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAQ6D,KAAK,SAASO,QAAQ,kBAAkB9D,KAAK,MAArD,kBAMNP,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,KACED,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAKsE,GAAI,GACPvE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACEwE,QAAS,kBAAMlD,GAAQ,IACvBD,KAAMA,EACNoD,MAAO,IACPC,UAAQ,GAER3E,EAAAC,EAAAC,cAACsE,EAAAvE,EAAM4C,KAAP,2CAIN7C,EAAAC,EAAAC,cAAC0E,EAAD,CAAW3G,SAAUA,MC3KZ4G,EARH,WACV,OACE7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4E,EAAD,QCANC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d5f93d9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n//import Button from 'react-bootstrap/Button'\r\n\r\nconst greenHighlight = {\r\n  backgroundColor: \" #aaff80\"\r\n};\r\nconst redHighlight = {\r\n  backgroundColor: \"#ff4d4d\"\r\n};\r\n\r\nconst TableData = ({ students }) => {\r\n  const gradeMap = {\r\n    A: 4,\r\n    B: 3,\r\n    C: 2,\r\n    D: 1,\r\n    F: 0\r\n  };\r\n\r\n  const getGpa = grades => {\r\n    return grades\r\n       .reduce((total, grade) => {\r\n         grade = gradeMap[grade.slice(-1)];\r\n        \r\n        return total += grade / 4;\r\n       }, 0);\r\n   };\r\n\r\n  const createRow = (_id, name, math, history, science, english, grades) => {\r\n    const averageGpa = getGpa(grades);\r\n    \r\n    return { _id, name, math, history, science, english, averageGpa };\r\n  };\r\n\r\n  const rows = \r\n    students.data.map(student =>\r\n      createRow(\r\n        student._id,\r\n        student.name,\r\n        student.grades[0].slice(-1),\r\n        student.grades[1].slice(-1),\r\n        student.grades[2].slice(-1),\r\n        student.grades[3].slice(-1),\r\n        student.grades\r\n      )\r\n    )\r\n  ;\r\n  \r\n\r\n  const highest = rows.reduce((previous, student) => {\r\n    return (previous || 0) > student.averageGpa\r\n      ? previous\r\n      : student.averageGpa;\r\n  }, 0);\r\n\r\n  const lowest = rows.reduce((prev, student) => {\r\n    return (prev || 0) < student.averageGpa\r\n      ? prev\r\n      : student.averageGpa;\r\n  }, 4);\r\n\r\n  console.log(lowest);\r\n  console.log(highest);\r\n\r\n  return (\r\n    <div style={{ margin: \"40px\" }}>\r\n      {rows && (\r\n        <Table responsive size=\"sm\">\r\n          <thead>\r\n            <tr style={{ textAlign: \"center\" }}>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Math</th>\r\n              <th>History</th>\r\n              <th>Science</th>\r\n              <th>English</th>\r\n              <th>GPA</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody style={{ textAlign: \"center\" }}>\r\n            {rows.map(row => (\r\n              <tr\r\n                key={row._id}\r\n                style={\r\n                  parseFloat(row.averageGpa) === highest\r\n                    ? greenHighlight\r\n                    : parseFloat(row.averageGpa) === lowest ? redHighlight : null\r\n                }\r\n              >\r\n                <td>{row._id}</td>\r\n                <td>{row.name}</td>\r\n                <td>{row.math}</td>\r\n                <td>{row.history}</td>\r\n                <td>{row.science}</td>\r\n                <td>{row.english}</td>\r\n                <td>{row.averageGpa}</td>\r\n                {/* <Button size=\"sm\" variant=\"outline-dark\">Delete</Button> */}\r\n              </tr>\r\n              \r\n            ))}\r\n            \r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  \r\n  getStudents: function() {\r\n    return axios.get(\"/api/students\");\r\n  },\r\n\r\n  \r\n  deleteStudent: function(id) {\r\n    return axios.delete(\"/api/students/\" + id);\r\n  },\r\n  \r\n  saveStudent: function(studentData) {\r\n    return axios.post(\"/api/students\", studentData);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport TableData from \"../components/TableData\";\r\nimport API from \"../utils/API\";\r\nimport { data } from \"../students.json\";\r\n\r\nconst Input = () => {\r\n  const students = { data };\r\n  const [show, setShow] = useState(false);\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    grades: [],\r\n    mathGpa: \"\",\r\n    historyGpa: \"\",\r\n    scienceGpa: \"\",\r\n    englishGpa: \"\"\r\n  });\r\n  const { name, grades, mathGpa, historyGpa, scienceGpa, englishGpa } = state;\r\n\r\n  let id = data[data.length - 1]._id;\r\n\r\n  const gradesCheck = /^[A-DFa-df]/;\r\n  const letters = /^[A-Za-z]+$/;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"form submitted\");\r\n    grades.push(\r\n      `Math - ${mathGpa}`,\r\n      `History - ${historyGpa}`,\r\n      `Science - ${scienceGpa}`,\r\n      `English - ${englishGpa}`\r\n    );\r\n\r\n    id++;\r\n    let newStudent = { _id: id, name: name, grades: grades };\r\n    students.data.push(newStudent);\r\n\r\n    let newData = students;\r\n    let data = JSON.stringify(newData);\r\n\r\n    API.saveStudent({ data }).catch(err => console.log(err));\r\n\r\n    setState({\r\n      ...state,\r\n      name: \"\",\r\n      grades: [],\r\n      mathGpa: \"\",\r\n      historyGpa: \"\",\r\n      scienceGpa: \"\",\r\n      englishGpa: \"\"\r\n    });\r\n  };\r\n  const handleName = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]:\r\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)\r\n    });\r\n\r\n    if (!e.target.value.match(letters)) {\r\n      setState({ ...state, [e.target.name]: \"\" });\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleGrade = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value.toUpperCase() });\r\n\r\n    if (!e.target.value.match(gradesCheck)) {\r\n      setState({ ...state, [e.target.name]: \"\" });\r\n      e.target.value = \"\";\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"40px\" }}>\r\n      {\" \"}\r\n      <Card>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Label style={{ fontWeight: \"bold\" }}>\r\n              {\" \"}\r\n              Enter Student's Name and Grades:\r\n            </Form.Label>\r\n            <Form.Row>\r\n              <Col>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name || \"\"}\r\n                  onChange={handleName}\r\n                  size=\"sm\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                />\r\n              </Col>\r\n\r\n              <Col>\r\n                {\" \"}\r\n                <Form.Label>Math</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  name=\"mathGpa\"\r\n                  value={mathGpa || \"\"}\r\n                  onChange={handleGrade}\r\n                  size=\"sm\"\r\n                  placeholder=\"Math\"\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <Form.Label>History</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  name=\"historyGpa\"\r\n                  value={historyGpa || \"\"}\r\n                  onChange={handleGrade}\r\n                  size=\"sm\"\r\n                  placeholder=\"History\"\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <Form.Label>Science</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  name=\"scienceGpa\"\r\n                  value={scienceGpa || \"\"}\r\n                  onChange={handleGrade}\r\n                  size=\"sm\"\r\n                  placeholder=\"Science\"\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <Form.Label>English</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  name=\"englishGpa\"\r\n                  value={englishGpa || \"\"}\r\n                  onChange={handleGrade}\r\n                  size=\"sm\"\r\n                  placeholder=\"English\"\r\n                  required\r\n                />\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <br />\r\n            <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">\r\n              Add Student\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast\r\n            onClose={() => setShow(false)}\r\n            show={show}\r\n            delay={3000}\r\n            autohide\r\n          >\r\n            <Toast.Body>Please only enter grade values.</Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n      </Row>\r\n      <TableData students={students} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react'\nimport Input from './components/Input'\n\nconst App = () => {\n  return (\n    <div> \n      <Input />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}